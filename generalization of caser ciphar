#include <stdio.h>
#include <string.h>
#include <ctype.h>
int gcd(int a, int b) {
 while (b != 0) {
int temp = b;
 b = a % b;
 a = temp;
 }
 return a;
}
void affineCipher(char *plaintext, int a, int b, char *ciphertext) {
 int i;
 for (i = 0; i < strlen(plaintext); i++) {
 if (isalpha(plaintext[i])) {
 char p = toupper(plaintext[i]);
 int p_num = p - 'A';

 int c_num = (a * p_num + b) % 26;

 ciphertext[i] = c_num + 'A';
 } else {
 ciphertext[i] = plaintext[i];
 }
 }
 ciphertext[i] = '\0';
}
int main() {
 char plaintext[100], ciphertext[100];
 int a, b;
 printf("Enter the plaintext: ");
 fgets(plaintext, sizeof(plaintext), stdin);
 plaintext[strcspn(plaintext, "\n")] = '\0';
 printf("Enter the key a (should be coprime with 26): ");
 scanf("%d", &a);
printf("Enter the key b: ");
 scanf("%d", &b);
 if (gcd(a, 26) != 1) {
 printf("Error: 'a' must be coprime with 26.\n");
 return 1;
 }
 affineCipher(plaintext, a, b, ciphertext);
 printf("Encrypted message: %s\n", ciphertext);
 return 0;
}
